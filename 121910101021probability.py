# -*- coding: utf-8 -*-
"""121910101021probability.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rczbpfPnlJb5YPZhmQkinIamk3kiYx1W
"""

A ={1,2,3,4,5}
B ={5,6,7}
print(2 in A)
type(2 in A)

A ={1,2,3,4,5}
B ={5,6,7}
C ={3,4,5}
B.issubset(A)
C.issubset(A)

def is_subset(A,B):
  for i in A:
    if i in B:
      pass
    else:
      return False 
  return true
A ={1,2,3,4,5}
B ={2,3,4}
print(is_subset(A,B))

import numpy as np
uni =set(np.arange(10))
print(uni)
A = set(np.arange(0,9,2))
print(A)
B =set(np.arange(0,9,3))
print(B)
P=A.union(B)
print(P)
#DeMorgan's law
import numpy as np
U=set(np.arange(10))
A=set(np.arange(0,9,2))
B=set(np.arange(0,9,3))
P= A.union(B)
Q=uni.difference(P)
S=uni.difference(B)
R=uni.difference(A)
T=R.intersection(S)
if Q==T :
  print("True")
else:
  print("false")


8th SEPTEMBER 2021 
def card_probability(f,s):
  prob = f/s
  return prob
f=int(input("total no of red hearts: "))
s=int(input("total outcomes: "))
print(round(card_probability(f,s),2))


def card_probability(f,s):
  
  prob = f/s
  return prob
f=int(input("total no of face cards: "))
s=int(input("total outcomes: "))
print(round(card_probability(f,s),2))

def card_probability(f,s):
  
  prob = f/s
  return prob
f=int(input("total no of queenofhearts cards: "))
s=int(input("total outcomes: "))
print(round(card_probability(f,s),2))

def dice(a,b):
  prob=len(a)+len(b)-len(a.intersection(b))
  s={1,2,3,4,5,6}
  c=prob/len(s)
  return c
a={1,3,5}
b={1,2,3}
print(round(dice(a,b),2))



import math
a=int(input("enter the number of right handed screws:- "))
b=int(input("enter the number of left handed screw:- "))
c=int(input("number of screws to be selected:- "))
d=input("enter with replacement or without replacement:- ")
T= a+b
if d== "without replacement":
  C1=math.factorial(b)/(math.factorial(b-c)*math.factorial(c))
  C2=math.factorial(T)/(math.factorial(T-c)*math.factorial(c))
  C= 1-(C1/C2)
  prob= print("prob of atleast one :- ", C)
else:
  prob1=(b)/T
  prob2=(b)/T
  P=1-(prob1*prob2)
  print("the prob with replacement is:- ",P)

